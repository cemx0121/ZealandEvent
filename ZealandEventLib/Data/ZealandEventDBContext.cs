// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using ZealandEventLib.Models;

#nullable disable

namespace ZealandEventLib.Data
{
    public partial class ZealandEventDBContext : DbContext
    {
        public ZealandEventDBContext()
        {
        }

        public ZealandEventDBContext(DbContextOptions<ZealandEventDBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<Arrangement> Arrangements { get; set; }
        public virtual DbSet<Booking> Bookings { get; set; }
        public virtual DbSet<Event> Events { get; set; }
        public virtual DbSet<User> Users { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=cemturan-zealand-server.database.windows.net;Initial Catalog=CemTuran.Zealand-DB;Persist Security Info=True;User ID=CemAdmin;Password=Turan!234");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Booking>(entity =>
            {
                entity.HasOne(d => d.Arrangement)
                    .WithMany(p => p.Bookings)
                    .HasForeignKey(d => d.ArrangementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Bookings__Arrang__07C12930");

                entity.HasOne(d => d.User)
                    .WithMany(p => p.Bookings)
                    .HasForeignKey(d => d.UserId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Bookings__User_I__08B54D69");
            });

            modelBuilder.Entity<Event>(entity =>
            {
                entity.HasOne(d => d.Arrangement)
                    .WithMany(p => p.Events)
                    .HasForeignKey(d => d.ArrangementId)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK__Events__Arrangem__7D439ABD");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}